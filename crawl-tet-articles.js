const axios = require("axios");
const cheerio = require("cheerio");
const fs = require("fs");
const path = require("path");

// C·∫•u h√¨nh crawling
const CONFIG = {
  vnexpressUrls: [
    "https://vnexpress.net/tag/tet-co-truyen-99667",
    "https://vnexpress.net/tag/tet-co-truyen-99667-p2"
  ],
  maxArticlesPerPage: 8,
  blogFilePath: path.join(__dirname, "blog.html"),
  categories: {
    "b√°nh ch∆∞ng": "·∫®m Th·ª±c",
    "m√¢m ng≈© qu·∫£": "Phong T·ª•c",
    "l·ªùi ch√∫c": "VƒÉn H√≥a",
    "phong t·ª•c": "Truy·ªÅn Th·ªëng",
    "l·ªãch ngh·ªâ": "Th√¥ng Tin",
    "m√≥n ƒÉn": "·∫®m Th·ª±c",
    "truy·ªÅn th·ªëng": "Truy·ªÅn Th·ªëng",
    "t·∫øt c·ªï truy·ªÅn": "VƒÉn H√≥a",
    "default": "Tin T·ª©c"
  }
};

/**
 * L·∫•y danh s√°ch b√†i vi·∫øt t·ª´ VNExpress
 */
async function getArticlesFromVNExpress(url) {
  try {
    console.log(`üîç ƒêang crawl d·ªØ li·ªáu t·ª´: ${url}`);
    
    // G·ª≠i y√™u c·∫ßu v·ªõi headers ƒë·ªÉ tr√°nh b·ªã block
    const response = await axios.get(url, {
      headers: {
        'User-Agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36',
        'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8',
        'Accept-Language': 'vi-VN,vi;q=0.9,en;q=0.8',
        'Accept-Encoding': 'gzip, deflate, br',
        'Connection': 'keep-alive',
        'Upgrade-Insecure-Requests': '1'
      },
      timeout: 10000
    });

    // T·∫£i HTML v√†o cheerio
    const $ = cheerio.load(response.data);

    // M·∫£ng ch·ª©a k·∫øt qu·∫£
    const articles = [];

    // Crawl b√†i vi·∫øt t·ª´ VNExpress
    $(".item-news").each((index, element) => {
      if (index >= CONFIG.maxArticlesPerPage) return false;
      
      const titleElement = $(element).find(".title-news a");
      const summaryElement = $(element).find(".description a");
      const imageElement = $(element).find("img");

      const title = titleElement.text().trim();
      let link = titleElement.attr("href");
      const summary = summaryElement.text().trim();

      // L·∫•y ƒë√∫ng URL h√¨nh ·∫£nh
      const image = 
        imageElement.attr("data-src") || // D√πng data-src n·∫øu c√≥
        imageElement.attr("src");       // N·∫øu kh√¥ng c√≥ data-src, d√πng src

      // X·ª≠ l√Ω link t∆∞∆°ng ƒë·ªëi
      if (link && !link.startsWith('http')) {
        link = link.startsWith('/') ? `https://vnexpress.net${link}` : `https://vnexpress.net/${link}`;
      }

      if (title && link) {
        articles.push({
          title: title.substring(0, 150),         // Ti√™u ƒë·ªÅ b√†i vi·∫øt
          link,          // Link b√†i vi·∫øt
          summary: summary.substring(0, 200) || generateSummary(title),       // T√≥m t·∫Øt b√†i vi·∫øt
          image,         // Link ·∫£nh ƒë·∫°i di·ªán
          category: detectCategory(title),
          date: formatDate(new Date())
        });
      }
    });

    console.log(`‚úÖ ƒê√£ t√¨m th·∫•y ${articles.length} b√†i vi·∫øt`);
    return articles;
    
  } catch (error) {
    console.error("‚ùå L·ªói khi crawl d·ªØ li·ªáu:", error.message);
    return [];
  }
}

/**
 * Ph√°t hi·ªán category d·ª±a tr√™n title
 */
function detectCategory(title) {
  const titleLower = title.toLowerCase();
  
  for (const [keyword, category] of Object.entries(CONFIG.categories)) {
    if (keyword !== 'default' && titleLower.includes(keyword)) {
      return category;
    }
  }
  
  return CONFIG.categories.default;
}

/**
 * T·∫°o summary t·ª´ title n·∫øu kh√¥ng c√≥
 */
function generateSummary(title) {
  return `Kh√°m ph√° th√¥ng tin chi ti·∫øt v·ªÅ ${title.toLowerCase()} trong d·ªãp T·∫øt Nguy√™n ƒê√°n. C·∫≠p nh·∫≠t nh·ªØng ki·∫øn th·ª©c b·ªï √≠ch v√† truy·ªÅn th·ªëng vƒÉn h√≥a Vi·ªát Nam.`;
}

/**
 * Format ng√†y th√°ng
 */
function formatDate(date) {
  return date.toLocaleDateString('vi-VN', {
    day: '2-digit',
    month: '2-digit', 
    year: 'numeric'
  });
}

/**
 * T·∫°o HTML cho m·ªôt b√†i vi·∫øt
 */
function generateArticleHTML(article, isFeatured = false) {
  // S·ª≠ d·ª•ng image URL th·ª±c t·∫ø t·ª´ VNExpress, fallback v·ªÅ local image n·∫øu kh√¥ng c√≥
  const imageUrl = article.image || `assets/images/foods/${article.title.toLowerCase().replace(/[^a-z0-9]/g, '-')}.jpg`;
  
  if (isFeatured) {
    return `
                    <!-- Featured Article -->
                    <article class="blog-post featured">
                        <div class="post-image">
                            <img src="${imageUrl}" alt="${article.title}" onerror="this.src='assets/images/ic_app.webp'">
                        </div>
                        <div class="post-content">
                            <div class="post-meta">
                                <span class="post-category">${article.category}</span>
                                <span class="post-date">${article.date}</span>
                            </div>
                            <h2><a href="${article.link}" target="_blank" rel="noopener">${article.title}</a></h2>
                            <p>${article.summary}</p>
                            <a href="${article.link}" target="_blank" rel="noopener" class="read-more">ƒê·ªçc ti·∫øp ‚Üí</a>
                        </div>
                    </article>`;
  } else {
    return `
                    <article class="blog-post">
                        <div class="post-image">
                            <img src="${imageUrl}" alt="${article.title}" onerror="this.src='assets/images/ic_app.webp'">
                        </div>
                        <div class="post-content">
                            <div class="post-meta">
                                <span class="post-category">${article.category}</span>
                                <span class="post-date">${article.date}</span>
                            </div>
                            <h3><a href="${article.link}" target="_blank" rel="noopener">${article.title}</a></h3>
                            <p>${article.summary}</p>
                            <a href="${article.link}" target="_blank" rel="noopener" class="read-more">ƒê·ªçc ti·∫øp ‚Üí</a>
                        </div>
                    </article>`;
  }
}

/**
 * C·∫≠p nh·∫≠t blog.html v·ªõi d·ªØ li·ªáu m·ªõi
 */
function updateBlogHTML(articles) {
  try {
    console.log('üìù ƒêang c·∫≠p nh·∫≠t blog.html...');
    
    // ƒê·ªçc file blog.html hi·ªán t·∫°i
    let blogContent = fs.readFileSync(CONFIG.blogFilePath, 'utf8');
    
    // T·∫°o HTML cho c√°c b√†i vi·∫øt
    let articlesHTML = '';
    
    articles.forEach((article, index) => {
      articlesHTML += generateArticleHTML(article, index === 0);
    });
    
    // T√¨m v√† thay th·∫ø ph·∫ßn blog-grid
    const blogGridStart = blogContent.indexOf('<div class="blog-grid">');
    const blogGridEnd = blogContent.indexOf('</div>', blogContent.indexOf('<!-- Pagination -->')) + 6;
    
    if (blogGridStart !== -1 && blogGridEnd !== -1) {
      const beforeGrid = blogContent.substring(0, blogGridStart);
      const afterGrid = blogContent.substring(blogGridEnd);
      
      const newBlogGrid = `<div class="blog-grid">${articlesHTML}
                </div>

                <!-- Pagination -->
                <div class="pagination">
                    <a href="https://vnexpress.net/tag/tet-co-truyen-99667" class="page-btn" target="_blank" rel="noopener noreferrer">Xem th√™m b√†i vi·∫øt v·ªÅ T·∫øt ‚Ä∫</a>
                </div>`;
      
      blogContent = beforeGrid + newBlogGrid + afterGrid;
      
      // Ghi l·∫°i file
      fs.writeFileSync(CONFIG.blogFilePath, blogContent, 'utf8');
      console.log('‚úÖ ƒê√£ c·∫≠p nh·∫≠t blog.html th√†nh c√¥ng!');
      
    } else {
      console.error('‚ùå Kh√¥ng t√¨m th·∫•y ph·∫ßn blog-grid ƒë·ªÉ c·∫≠p nh·∫≠t');
    }
    
  } catch (error) {
    console.error('‚ùå L·ªói khi c·∫≠p nh·∫≠t blog.html:', error.message);
  }
}

/**
 * Crawl t·ª´ nhi·ªÅu trang VNExpress
 */
async function crawlMultiplePages() {
  const allArticles = [];
  
  for (let i = 0; i < CONFIG.vnexpressUrls.length; i++) {
    const url = CONFIG.vnexpressUrls[i];
    console.log(`üìÑ ƒêang crawl trang ${i + 1}/${CONFIG.vnexpressUrls.length}`);
    
    try {
      const articles = await getArticlesFromVNExpress(url);
      allArticles.push(...articles);
      
      // Delay gi·ªØa c√°c request ƒë·ªÉ tr√°nh b·ªã block
      if (i < CONFIG.vnexpressUrls.length - 1) {
        console.log("‚è≥ Ch·ªù 2 gi√¢y tr∆∞·ªõc khi crawl trang ti·∫øp theo...");
        await new Promise(resolve => setTimeout(resolve, 2000));
      }
    } catch (error) {
      console.error(`‚ùå L·ªói khi crawl trang ${i + 1}:`, error.message);
    }
  }
  
  // Lo·∫°i b·ªè duplicate v√† gi·ªõi h·∫°n s·ªë l∆∞·ª£ng
  const uniqueArticles = allArticles.filter((article, index, self) => 
    index === self.findIndex(a => a.link === article.link)
  ).slice(0, 15); // Gi·ªõi h·∫°n t·ªëi ƒëa 15 b√†i
  
  return uniqueArticles;
}

/**
 * H√†m ch√≠nh
 */
async function main() {
  console.log('üöÄ B·∫Øt ƒë·∫ßu crawl d·ªØ li·ªáu blog T·∫øt...');
  
  try {
    // Crawl d·ªØ li·ªáu t·ª´ nhi·ªÅu trang VNExpress
    const articles = await crawlMultiplePages();
    
    if (articles.length === 0) {
      console.log("‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt n√†o!");
      return;
    }
    
    console.log(`üìä T·ªïng c·ªông crawl ƒë∆∞·ª£c ${articles.length} b√†i vi·∫øt t·ª´ ${CONFIG.vnexpressUrls.length} trang`);
    
    if (articles.length > 0) {
      console.log('üìä Danh s√°ch b√†i vi·∫øt ƒë√£ crawl:');
      articles.forEach((article, index) => {
        console.log(`${index + 1}. [${article.category}] ${article.title}`);
        console.log(`   üìÖ ${article.date} | üîó ${article.link}`);
        console.log(`   üìù ${article.summary.substring(0, 100)}...\n`);
      });
      
      // C·∫≠p nh·∫≠t blog.html
      updateBlogHTML(articles);
      
      console.log('üéâ Ho√†n th√†nh! Blog ƒë√£ ƒë∆∞·ª£c c·∫≠p nh·∫≠t v·ªõi d·ªØ li·ªáu m·ªõi.');
    } else {
      console.log('‚ö†Ô∏è  Kh√¥ng t√¨m th·∫•y b√†i vi·∫øt n√†o ƒë·ªÉ c·∫≠p nh·∫≠t.');
    }
    
  } catch (error) {
    console.error('‚ùå L·ªói trong qu√° tr√¨nh th·ª±c thi:', error.message);
  }
}

// Ch·∫°y script n·∫øu ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
  main();
}

// Export ƒë·ªÉ c√≥ th·ªÉ s·ª≠ d·ª•ng nh∆∞ module
module.exports = {
  getArticlesFromVNExpress,
  updateBlogHTML,
  main
};