{"version":3,"file":"index.umd.js","sources":["../src/constants.ts","../src/lunar-date.ts","../src/utils.ts","../src/core.ts","../src/lunar-calendar.ts","../src/index.ts"],"sourcesContent":["// src/constants.ts\r\nexport const ABOUT = \"Âm lịch Việt Nam - Version 1.0\\n© 2025 Refactored for TypeScript\";\r\n\r\nexport const TK13: number[] = [\r\n  0x226da2, 0x4695d0, 0x3349dc, 0x5849b0, 0x42a4b0, 0x2aaab8, 0x506a50, 0x3ab540, 0x24bb44, 0x48ab6,\r\n  0x3495b0, 0x205372, 0x464970, 0x2e64f9, 0x5454b0, 0x3e6a50, 0x296c57, 0x4c5ac0, 0x36ab60, 0x2386e,\r\n  0x4892e0, 0x30c97c, 0x56c960, 0x40d4a0, 0x2adaa8, 0x4eb550, 0x3a56a0, 0x24adb5, 0x4c25d0, 0x3492e,\r\n  0x1ed2b2, 0x44a950, 0x2ed4d9, 0x52b2a0, 0x3cb550, 0x285757, 0x4e4da0, 0x36a5b0, 0x225574, 0x4852b,\r\n  0x33a93c, 0x566930, 0x406aa0, 0x2aada8, 0x50ab50, 0x3a4b60, 0x24aae4, 0x4aa570, 0x365270, 0x1f526,\r\n  0x42e530, 0x2e6cba, 0x5456a0, 0x3c5b50, 0x294ad6, 0x4e4ae0, 0x38a4e0, 0x20d4d4, 0x46d260, 0x30d53,\r\n  0x56b520, 0x3eb6a0, 0x2b56a9, 0x505570, 0x3c49d0, 0x25a1b5, 0x4aa4b0, 0x34aa50, 0x1eea51, 0x42b52,\r\n  0x2cb5aa, 0x52ab60, 0x3e95b0, 0x284b76, 0x4e4970, 0x3864b0, 0x22b4b3, 0x466a50, 0x306b3b, 0x565ac,\r\n  0x40ab60, 0x2b2ad8, 0x5049e0, 0x3aa4d0, 0x24d4b5, 0x48b250, 0x32b520, 0x1cf522, 0x42b5a0, 0x2c95e,\r\n  0x5295b0, 0x3e49b0, 0x28a576, 0x4ca4b0, 0x36aa50, 0x20ba54, 0x466d40, 0x2ead6c, 0x54ab60, 0x409370\r\n];\r\n\r\nexport const TK14: number[] = [\r\n  0x2d49b8, 0x504970, 0x3a64b0, 0x246ca5, 0x48da50, 0x325aa0, 0x1cd6c1, 0x42a6e0, 0x2e92fb, 0x5292e,\r\n  0x3cc960, 0x26d557, 0x4cd4a0, 0x34d550, 0x215553, 0x4656a0, 0x30a6d0, 0x1aa5d1, 0x4092b0, 0x2aa5b,\r\n  0x50a950, 0x38b2a0, 0x23b2a5, 0x48ad50, 0x344da0, 0x1ccba1, 0x42a570, 0x2e52f9, 0x545270, 0x3c693,\r\n  0x266b37, 0x4c6aa0, 0x36ab50, 0x205753, 0x464b60, 0x30a67c, 0x56a2e0, 0x3ed160, 0x28e968, 0x4ed4a,\r\n  0x38daa0, 0x225ea5, 0x4856d0, 0x344ae0, 0x1f85d2, 0x42a2d0, 0x2cd17a, 0x52aa50, 0x3cb520, 0x24d74,\r\n  0x4aada0, 0x3655d0, 0x2253b3, 0x4645b0, 0x30a2b0, 0x1ba2b1, 0x40aa50, 0x28b559, 0x4e6b20, 0x38ad6,\r\n  0x255365, 0x489370, 0x344570, 0x1ea573, 0x4452b0, 0x2c6a6a, 0x50d950, 0x3c5aa0, 0x27aac7, 0x4aa6e,\r\n  0x3652e0, 0x20cae3, 0x46a560, 0x2ed2bb, 0x54d2a0, 0x3ed550, 0x2a5ad9, 0x4e56a0, 0x38a6d0, 0x2455d,\r\n  0x4a52b0, 0x32a8d0, 0x1ce552, 0x42b2a0, 0x2cb56a, 0x50ad50, 0x3c4da0, 0x26a7a6, 0x4ca570, 0x3651b,\r\n  0x21a174, 0x466530, 0x316a9c, 0x545aa0, 0x3eab50, 0x2a2bd9, 0x502b60, 0x38a370, 0x2452e5, 0x48d160\r\n];\r\n\r\nexport const TK15: number[] = [\r\n  0x32e4b0, 0x1c7523, 0x40daa0, 0x2d5b4b, 0x5256d0, 0x3c2ae0, 0x26a3d7, 0x4ca2d0, 0x36d150, 0x1ed95,\r\n  0x44b520, 0x2eb69c, 0x54ada0, 0x3e55d0, 0x2b25b9, 0x5045b0, 0x3aa2b0, 0x22aab5, 0x48a950, 0x32b52,\r\n  0x1ceaa1, 0x40ab60, 0x2c55bc, 0x524b70, 0x3e4570, 0x265377, 0x4c52b0, 0x366950, 0x216954, 0x445aa,\r\n  0x2eab5c, 0x54a6e0, 0x404ae0, 0x28a5e8, 0x4ea560, 0x38d2a0, 0x22eaa6, 0x46d550, 0x3256a0, 0x1d95a,\r\n  0x4295d0, 0x2c4afb, 0x5249b0, 0x3ca4d0, 0x26d2d7, 0x4ab2a0, 0x34b550, 0x205d54, 0x462da0, 0x2e95b,\r\n  0x1b1571, 0x4049b0, 0x2aa4f9, 0x4e64b0, 0x386a90, 0x22aea6, 0x486b50, 0x322b60, 0x1caae2, 0x42937,\r\n  0x2f496b, 0x50c960, 0x3ae4d0, 0x266b27, 0x4adaa0, 0x345ad0, 0x2036d3, 0x4626e0, 0x3092e0, 0x18d2d,\r\n  0x3ec950, 0x28d4d9, 0x4eb4a0, 0x36b690, 0x2355a6, 0x4855b0, 0x3425d0, 0x1ca5b2, 0x4292b0, 0x2ca97,\r\n  0x526950, 0x3a74a0, 0x24b5a8, 0x4aab60, 0x3653b0, 0x202b74, 0x462570, 0x3052b0, 0x1ad2b1, 0x3e695,\r\n  0x286ad9, 0x4e5aa0, 0x38ab50, 0x224ed5, 0x484ae0, 0x32a370, 0x1f44e3, 0x40d2a0, 0x2bd94b, 0x50b550\r\n];\r\n\r\nexport const TK16: number[] = [\r\n  0x3c56a0, 0x2497a7, 0x4a95d0, 0x364ae0, 0x20a9b4, 0x44a4d0, 0x2ed250, 0x19aaa1, 0x3eb550, 0x2856d,\r\n  0x4e2da0, 0x3895b0, 0x244b75, 0x484970, 0x32a4b0, 0x1cb4b4, 0x426a90, 0x2aad5c, 0x505b50, 0x3c2b6,\r\n  0x2695e8, 0x4a92f0, 0x364970, 0x206964, 0x44d4a0, 0x2cea5c, 0x52d690, 0x3e56d0, 0x2b2b5a, 0x4e26e,\r\n  0x3892e0, 0x22cad6, 0x48c950, 0x30d4a0, 0x1af4a2, 0x40b590, 0x2c56dc, 0x5055b0, 0x3c25d0, 0x2693b,\r\n  0x4c92b0, 0x34a950, 0x1fb155, 0x446ca0, 0x2ead50, 0x192b61, 0x3e4bb0, 0x2a25f9, 0x502570, 0x3852b,\r\n  0x22aaa6, 0x46e950, 0x326aa0, 0x1abaa3, 0x40ab50, 0x2c4b7b, 0x524ae0, 0x3aa570, 0x2652d7, 0x4ad26,\r\n  0x34d950, 0x1e5d55, 0x4456a0, 0x2e96d0, 0x1a55d2, 0x3e4ae0, 0x28a4fa, 0x4ea4d0, 0x38d250, 0x20d69,\r\n  0x46b550, 0x3235a0, 0x1caba2, 0x4095b0, 0x2d49bc, 0x524970, 0x3ca4b0, 0x24b2b8, 0x4a6a50, 0x346d4,\r\n  0x1fab54, 0x442ba0, 0x2e9370, 0x2e52f2, 0x544970, 0x3c64e9, 0x60d4a0, 0x4aea50, 0x373aa6, 0x5a56d,\r\n  0x462b60, 0x3185e3, 0x5692e0, 0x3ec97b, 0x64a950, 0x4ed4a0, 0x38daa8, 0x5cb550, 0x4856b0, 0x342da4\r\n];\r\n\r\nexport const TK17: number[] = [\r\n  0x58a5d0, 0x4292d0, 0x2cd2b2, 0x52a950, 0x3cb4d9, 0x606aa0, 0x4aad50, 0x365756, 0x5c4ba0, 0x44a5b,\r\n  0x314573, 0x5652b0, 0x41a94b, 0x62e950, 0x4e6aa0, 0x38ada8, 0x5e9b50, 0x484b60, 0x32aae4, 0x58a4f,\r\n  0x445260, 0x2bd262, 0x50d550, 0x3d5a9a, 0x6256a0, 0x4a96d0, 0x3749d6, 0x5c49e0, 0x46a4d0, 0x2ed4d,\r\n  0x54d250, 0x3ed53b, 0x64b540, 0x4cb5a0, 0x3995a8, 0x5e95b0, 0x4a49b0, 0x32a974, 0x58a4b0, 0x42aa5,\r\n  0x2cea51, 0x506d40, 0x3aadbb, 0x622b60, 0x4c9370, 0x364af6, 0x5c4970, 0x4664b0, 0x3074a3, 0x52da5,\r\n  0x3e6b5b, 0x6456d0, 0x502ae0, 0x3893e7, 0x5e92e0, 0x48c960, 0x33d155, 0x56d4a0, 0x40da50, 0x2d355,\r\n  0x5256a0, 0x3aa6fa, 0x6225d0, 0x4c92d0, 0x36aab6, 0x5aa950, 0x44b4a0, 0x2ebaa4, 0x54ad50, 0x3f55a,\r\n  0x644ba0, 0x4ea5b0, 0x3b5278, 0x5e52b0, 0x486930, 0x327555, 0x586aa0, 0x40ab50, 0x2c5b52, 0x524b6,\r\n  0x3da56a, 0x60a4f0, 0x4c5260, 0x34ea66, 0x5ad530, 0x445aa0, 0x2eb6a3, 0x5496d0, 0x404ae0, 0x28c9d,\r\n  0x4ea4d0, 0x38d2d8, 0x5eb250, 0x46b520, 0x31d545, 0x56ada0, 0x4295d0, 0x2c55b2, 0x5249b0, 0x3ca4f9\r\n];\r\n\r\nexport const TK18: number[] = [\r\n  0x62a4b0, 0x4caa50, 0x37b457, 0x5c6b40, 0x46ada0, 0x305b64, 0x569370, 0x424970, 0x2cc971, 0x5064b,\r\n  0x3a6aa8, 0x5eda50, 0x4a5aa0, 0x32aec5, 0x58a6e0, 0x4492f0, 0x3052e2, 0x52c960, 0x3dd49a, 0x62d4a,\r\n  0x4cd550, 0x365b57, 0x5c56a0, 0x46a6d0, 0x3295d4, 0x5692d0, 0x40a95c, 0x2ad4b0, 0x50b2a0, 0x38b5a,\r\n  0x5ead50, 0x4a4da0, 0x34aba4, 0x58a570, 0x4452b0, 0x2eb273, 0x546930, 0x3c6abb, 0x626aa0, 0x4cab5,\r\n  0x394b57, 0x5c4b60, 0x46a570, 0x3252e4, 0x56d160, 0x3ee93c, 0x64d520, 0x4edaa0, 0x3b5b29, 0x5e56d,\r\n  0x4a4ae0, 0x34a5d5, 0x5aa2d0, 0x42d150, 0x2cea52, 0x52b520, 0x3cd6ab, 0x60ada0, 0x4c55d0, 0x384bb,\r\n  0x5e45b0, 0x46a2b0, 0x30d2b4, 0x56aa50, 0x41b52c, 0x646b20, 0x4ead60, 0x3a55e9, 0x609370, 0x4a457,\r\n  0x34a575, 0x5a52b0, 0x446a50, 0x2d5a52, 0x525aa0, 0x3dab4b, 0x62a6e0, 0x4c92e0, 0x36c6e6, 0x5ca56,\r\n  0x46d4a0, 0x2eeaa5, 0x54d550, 0x4056a0, 0x2ad5a1, 0x4ea5d0, 0x3b52d9, 0x6052b0, 0x4aa950, 0x32d55,\r\n  0x58b2a0, 0x42b550, 0x2e6d52, 0x524da0, 0x3da5cb, 0x62a570, 0x4e51b0, 0x36a977, 0x5c6530, 0x466a90\r\n];\r\n\r\nexport const TK19: number[] = [\r\n  0x30baa3, 0x56ab50, 0x422ba0, 0x2cab61, 0x52a370, 0x3c51e8, 0x60d160, 0x4ae4b0, 0x376926, 0x58daa0,\r\n  0x445b50, 0x3116d2, 0x562ae0, 0x3ea2e0, 0x28e2d2, 0x4ec950, 0x38d556, 0x5cb520, 0x46b690, 0x325da4,\r\n  0x5855d0, 0x4225d0, 0x2ca5b3, 0x52a2b0, 0x3da8b7, 0x60a950, 0x4ab4a0, 0x35b2a5, 0x5aad50, 0x4455b0,\r\n  0x302b74, 0x562570, 0x4052f9, 0x6452b0, 0x4e6950, 0x386d56, 0x5e5aa0, 0x46ab50, 0x3256d4, 0x584ae0,\r\n  0x42a570, 0x2d4553, 0x50d2a0, 0x3be8a7, 0x60d550, 0x4a5aa0, 0x34ada5, 0x5a95d0, 0x464ae0, 0x2eaab4,\r\n  0x54a4d0, 0x3ed2b8, 0x64b290, 0x4cb550, 0x385757, 0x5e2da0, 0x4895d0, 0x324d75, 0x5849b0, 0x42a4b0,\r\n  0x2da4b3, 0x506a90, 0x3aad98, 0x606b50, 0x4c2b60, 0x359365, 0x5a9370, 0x464970, 0x306964, 0x52e4a0,\r\n  0x3cea6a, 0x62da90, 0x4e5ad0, 0x392ad6, 0x5e2ae0, 0x4892e0, 0x32cad5, 0x56c950, 0x40d4a0, 0x2bd4a3,\r\n  0x50b690, 0x3a57a7, 0x6055b0, 0x4c25d0, 0x3695b5, 0x5a92b0, 0x44a950, 0x2ed954, 0x54b4a0, 0x3cb550,\r\n  0x286b52, 0x4e55b0, 0x3a2776, 0x5e2570, 0x4852b0, 0x32aaa5, 0x56e950, 0x406aa0, 0x2abaa3, 0x50ab50\r\n];\r\n\r\nexport const TK20: number[] = [\r\n  0x3c4bd8, 0x624ae0, 0x4ca570, 0x3854d5, 0x5cd260, 0x44d950, 0x315554, 0x5656a0, 0x409ad0, 0x2a55d2,\r\n  0x504ae0, 0x3aa5b6, 0x60a4d0, 0x48d250, 0x33d255, 0x58b540, 0x42d6a0, 0x2cada2, 0x5295b0, 0x3f4977,\r\n  0x644970, 0x4ca4b0, 0x36b4b5, 0x5c6a50, 0x466d50, 0x312b54, 0x562b60, 0x409570, 0x2c52f2, 0x504970,\r\n  0x3a6566, 0x5ed4a0, 0x48ea50, 0x336a95, 0x585ad0, 0x442b60, 0x2f86e3, 0x5292e0, 0x3dc8d7, 0x62c950,\r\n  0x4cd4a0, 0x35d8a6, 0x5ab550, 0x4656a0, 0x31a5b4, 0x5625d0, 0x4092d0, 0x2ad2b2, 0x50a950, 0x38b557,\r\n  0x5e6ca0, 0x48b550, 0x355355, 0x584da0, 0x42a5b0, 0x2f4573, 0x5452b0, 0x3ca9a8, 0x60e950, 0x4c6aa0,\r\n  0x36aea6, 0x5aab50, 0x464b60, 0x30aae4, 0x56a570, 0x405260, 0x28f263, 0x4ed940, 0x38db47, 0x5cd6a0,\r\n  0x4896d0, 0x344dd5, 0x5a4ad0, 0x42a4d0, 0x2cd4b4, 0x52b250, 0x3cd558, 0x60b540, 0x4ab5a0, 0x3755a6,\r\n  0x5c95b0, 0x4649b0, 0x30a974, 0x56a4b0, 0x40aa50, 0x29aa52, 0x4e6d20, 0x39ad47, 0x5eab60, 0x489370,\r\n  0x344af5, 0x5a4970, 0x4464b0, 0x2c74a3, 0x50ea50, 0x3d6a58, 0x6256a0, 0x4aaad0, 0x3696d5, 0x5c92e0\r\n];\r\n\r\nexport const TK21: number[] = [\r\n  0x46c960, 0x2ed954, 0x54d4a0, 0x3eda50, 0x2a7552, 0x4e56a0, 0x38a7a7, 0x5ea5d0, 0x4a92b0, 0x32aab5,\r\n  0x58a950, 0x42b4a0, 0x2cbaa4, 0x50ad50, 0x3c55d9, 0x624ba0, 0x4ca5b0, 0x375176, 0x5c5270, 0x466930,\r\n  0x307934, 0x546aa0, 0x3ead50, 0x2a5b52, 0x504b60, 0x38a6e6, 0x5ea4e0, 0x48d260, 0x32ea65, 0x56d520,\r\n  0x40daa0, 0x2d56a3, 0x5256d0, 0x3c4afb, 0x6249d0, 0x4ca4d0, 0x37d0b6, 0x5ab250, 0x44b520, 0x2edd25,\r\n  0x54b5a0, 0x3e55d0, 0x2a55b2, 0x5049b0, 0x3aa577, 0x5ea4b0, 0x48aa50, 0x33b255, 0x586d20, 0x40ad60,\r\n  0x2d4b63, 0x525370, 0x3e49e8, 0x60c970, 0x4c54b0, 0x3768a6, 0x5ada50, 0x445aa0, 0x2fa6a4, 0x54aad0,\r\n  0x4052e0, 0x28d2e3, 0x4ec950, 0x38d557, 0x5ed4a0, 0x46d950, 0x325d55, 0x5856a0, 0x42a6d0, 0x2c55d4,\r\n  0x5252b0, 0x3ca9b8, 0x62a930, 0x4ab490, 0x34b6a6, 0x5aad50, 0x4655a0, 0x2eab64, 0x54a570, 0x4052b0,\r\n  0x2ab173, 0x4e6930, 0x386b37, 0x5e6aa0, 0x48ad50, 0x332ad5, 0x582b60, 0x42a570, 0x2e52e4, 0x50d160,\r\n  0x3ae958, 0x60d520, 0x4ada90, 0x355aa6, 0x5a56d0, 0x462ae0, 0x30a9d4, 0x54a2d0, 0x3ed150, 0x28e952\r\n];\r\n\r\nexport const TK22: number[] = [\r\n  0x4eb520, 0x38d727, 0x5eada0, 0x4a55b0, 0x362db5, 0x5a45b0, 0x44a2b0, 0x2eb2b4, 0x54a950, 0x3cb559,\r\n  0x626b20, 0x4cad50, 0x385766, 0x5c5370, 0x484570, 0x326574, 0x5852b0, 0x406950, 0x2a7953, 0x505aa0,\r\n  0x3baaa7, 0x5ea6d0, 0x4a4ae0, 0x35a2e5, 0x5aa550, 0x42d2a0, 0x2de2a4, 0x52d550, 0x3e5abb, 0x6256a0,\r\n  0x4c96d0, 0x3949b6, 0x5e4ab0, 0x46a8d0, 0x30d4b5, 0x56b290, 0x40b550, 0x2a6d52, 0x504da0, 0x3b9567,\r\n  0x609570, 0x4a49b0, 0x34a975, 0x5a64b0, 0x446a90, 0x2cba94, 0x526b50, 0x3e2b60, 0x28ab61, 0x4c9570,\r\n  0x384ae6, 0x5cd160, 0x46e4a0, 0x2eed25, 0x54da90, 0x405b50, 0x2c36d3, 0x502ae0, 0x3a93d7, 0x6092d0,\r\n  0x4ac950, 0x32d556, 0x58b4a0, 0x42b690, 0x2e5d94, 0x5255b0, 0x3e25fa, 0x6425b0, 0x4e92b0, 0x36aab6,\r\n  0x5c6950, 0x4674a0, 0x31b2a5, 0x54ad50, 0x4055a0, 0x2aab73, 0x522570, 0x3a5377, 0x6052b0, 0x4a6950,\r\n  0x346d56, 0x585aa0, 0x42ab50, 0x2e56d4, 0x544ae0, 0x3ca570, 0x2864d2, 0x4cd260, 0x36eaa6, 0x5ad550,\r\n  0x465aa0, 0x30ada5, 0x5695d0, 0x404ad0, 0x2aa9b3, 0x50a4d0, 0x3ad2b7, 0x5eb250, 0x48b540, 0x33d556\r\n]\r\n\r\nexport const CAN: string[] = [\"Giáp\", \"Ất\", \"Bình\", \"Đinh\", \"Mậu\", \"Kỷ\", \"Canh\", \"Tân\", \"Nhâm\", \"Quý\"];\r\nexport const CHI: string[] = [\"Tý\", \"Sửu\", \"Dần\", \"Mão\", \"Thìn\", \"Tỵ\", \"Ngọ\", \"Mùi\", \"Thân\", \"Dậu\", \"Tuất\", \"Hợi\"];\r\nexport const TUAN: string[] = [\"Chủ nhật\", \"Thứ hai\", \"Thứ ba\", \"Thứ tư\", \"Thứ năm\", \"Thứ sáu\", \"Thứ bảy\"];\r\n\r\nexport const GIO_HD: string[] = [\"110100101100\", \"001101001011\", \"110011010010\", \"101100110100\", \"001011001101\", \"010010110011\"];\r\n\r\nexport const TIET_KHI: string[] = [\r\n  \"Xuân phân\", \"Thanh minh\", \"Cốc vũ\", \"Lập hạ\", \"Tiểu mãn\", \"Mang chủng\",\r\n  \"Hạ chí\", \"Tiểu thử\", \"Đại thử\", \"Lập thu\", \"Xử thử\", \"Bạch lộ\",\r\n  \"Thu phân\", \"Hàn lộ\", \"Sương giáng\", \"Lập đông\", \"Tiểu tuyết\", \"Đại tuyết\",\r\n  \"Đông chí\", \"Tiểu hàn\", \"Đại hàn\", \"Lập xuân\", \"Vũ Thủy\", \"Kinh trạp\"\r\n];\r\n\r\nexport const FIRST_DAY = 2159358; // jdn(31, 1, 1200)\r\nexport const LAST_DAY = 2524593;  // jdn(31, 12, 2199)","// src/lunar-date.ts\r\nimport type { LunarDateInfo, SolarDateInfo } from './types';\r\n\r\nexport class LunarDate implements LunarDateInfo {\r\n  public day: number;\r\n  public month: number;\r\n  public year: number;\r\n  public leap: boolean;\r\n  public jd: number;\r\n\r\n  constructor(day: number, month: number, year: number, leap: boolean, jd: number) {\r\n    this.day = day;\r\n    this.month = month;\r\n    this.year = year;\r\n    this.leap = leap;\r\n    this.jd = jd;\r\n  }\r\n\r\n  toString(): string {\r\n    const leapStr = this.leap ? ' (nhuận)' : '';\r\n    return `${this.day}/${this.month}/${this.year}${leapStr}`;\r\n  }\r\n\r\n  isValid(): boolean {\r\n    return this.day > 0 && this.month > 0 && this.year > 0;\r\n  }\r\n\r\n  equals(other: LunarDate): boolean {\r\n    return this.day === other.day &&\r\n           this.month === other.month &&\r\n           this.year === other.year &&\r\n           this.leap === other.leap;\r\n  }\r\n}","// src/utils.ts\r\nimport {\r\n  TK13,\r\n  TK14,\r\n  TK15,\r\n  TK16,\r\n  TK17,\r\n  TK18,\r\n  TK19,\r\n  TK20,\r\n  TK21,\r\n  TK22,\r\n} from \"./constants\";\r\nimport { LunarDate } from './lunar-date';\r\n\r\n/**\r\n * Discard the fractional part of a number\r\n */\r\nexport const INT = (d: number): number => Math.floor(d);\r\n\r\n/**\r\n * Calculate Julian Day Number from Gregorian date\r\n */\r\nexport function jdn(day: number, month: number, year: number): number {\r\n  const a = INT((14 - month) / 12);\r\n  const y = year + 4800 - a;\r\n  const m = month + 12 * a - 3;\r\n  let jd = day + INT((153 * m + 2) / 5) + 365 * y + INT(y / 4) - INT(y / 100) + INT(y / 400) - 32045;\r\n  \r\n  if (jd < 2299161) {\r\n    jd = day + INT((153 * m + 2) / 5) + 365 * y + INT(y / 4) - 32083;\r\n  }\r\n  \r\n  return jd;\r\n}\r\n\r\n/**\r\n * Convert Julian Day Number to Gregorian date\r\n */\r\nexport function jdn2date(jd: number): [number, number, number, number] {\r\n  let A: number;\r\n  const Z = jd;\r\n  \r\n  if (Z < 2299161) {\r\n    A = Z;\r\n  } else {\r\n    const alpha = INT((Z - 1867216.25) / 36524.25);\r\n    A = Z + 1 + alpha - INT(alpha / 4);\r\n  }\r\n  \r\n  const B = A + 1524;\r\n  const C = INT((B - 122.1) / 365.25);\r\n  const D = INT(365.25 * C);\r\n  const E = INT((B - D) / 30.6001);\r\n  \r\n  const day = INT(B - D - INT(30.6001 * E));\r\n  const month = E < 14 ? E - 1 : E - 13;\r\n  const year = month < 3 ? C - 4715 : C - 4716;\r\n  \r\n  return [day, month, year, jd];\r\n}\r\n\r\n/**\r\n * Decode lunar year information\r\n */\r\nexport function decodeLunarYear(year: number, k: number): LunarDate[] {\r\n  const monthLengths = [29, 30];\r\n  const regularMonths: number[] = new Array(12);\r\n  const offsetOfTet = k >> 17;\r\n  const leapMonth = k & 0xf;\r\n  const leapMonthLength = monthLengths[k >> 16 & 0x1];\r\n  const solarNY = jdn(1, 1, year);\r\n  let currentJD = solarNY + offsetOfTet;\r\n  \r\n  let j = k >> 4;\r\n  for (let i = 0; i < 12; i++) {\r\n    regularMonths[12 - i - 1] = monthLengths[j & 0x1];\r\n    j >>= 1;\r\n  }\r\n  \r\n  const ly: LunarDate[] = [];\r\n  \r\n  if (leapMonth === 0) {\r\n    for (let mm = 1; mm <= 12; mm++) {\r\n      ly.push(new LunarDate(1, mm, year, false, currentJD));\r\n      currentJD += regularMonths[mm - 1];\r\n    }\r\n  } else {\r\n    for (let mm = 1; mm <= leapMonth; mm++) {\r\n      ly.push(new LunarDate(1, mm, year, false, currentJD));\r\n      currentJD += regularMonths[mm - 1];\r\n    }\r\n    ly.push(new LunarDate(1, leapMonth, year, true, currentJD));\r\n    currentJD += leapMonthLength;\r\n    for (let mm = leapMonth + 1; mm <= 12; mm++) {\r\n      ly.push(new LunarDate(1, mm, year, false, currentJD));\r\n      currentJD += regularMonths[mm - 1];\r\n    }\r\n  }\r\n  \r\n  return ly;\r\n}\r\n\r\n/**\r\n * Get year information from lookup tables\r\n */\r\nexport function getYearInfo(year: number): LunarDate[] {\r\n  let yearCode: number;\r\n  \r\n  if (year < 1200 || year > 2199) {\r\n    throw new Error(`Year ${year} is not supported. Supported range: 1200-2199`);\r\n  }\r\n  \r\n  if (year < 1300) {\r\n    yearCode = TK13[year - 1200];\r\n  } else if (year < 1400) {\r\n    yearCode = TK14[year - 1300];\r\n  } else if (year < 1500) {\r\n    yearCode = TK15[year - 1400];\r\n  } else if (year < 1600) {\r\n    yearCode = TK16[year - 1500];\r\n  } else if (year < 1700) {\r\n    yearCode = TK17[year - 1600];\r\n  } else if (year < 1800) {\r\n    yearCode = TK18[year - 1700];\r\n  } else if (year < 1900) {\r\n    yearCode = TK19[year - 1800];\r\n  } else if (year < 2000) {\r\n    yearCode = TK20[year - 1900];\r\n  } else if (year < 2100) {\r\n    yearCode = TK21[year - 2000];\r\n  } else {\r\n    yearCode = TK22[year - 2100];\r\n  }\r\n  \r\n  return decodeLunarYear(year, yearCode);\r\n}","// src/core.ts\r\nimport { CAN, CHI, FIRST_DAY, LAST_DAY } from './constants';\r\nimport { LunarDate } from './lunar-date';\r\nimport { getYearInfo, jdn, jdn2date } from './utils';\r\nimport type { SolarDateInfo } from './types';\r\n\r\n/**\r\n * Find lunar date from Julian Day Number\r\n */\r\nfunction findLunarDate(jd: number, ly: LunarDate[]): LunarDate {\r\n  if (jd > LAST_DAY || jd < FIRST_DAY || ly[0].jd > jd) {\r\n    return new LunarDate(0, 0, 0, false, jd);\r\n  }\r\n  \r\n  let i = ly.length - 1;\r\n  while (jd < ly[i].jd) {\r\n    i--;\r\n  }\r\n  \r\n  const off = jd - ly[i].jd;\r\n  return new LunarDate(ly[i].day + off, ly[i].month, ly[i].year, ly[i].leap, jd);\r\n}\r\n\r\n/**\r\n * Convert solar date to lunar date\r\n */\r\nexport function getLunarDate(day: number, month: number, year: number): LunarDate {\r\n  if (year < 1200 || year > 2199) {\r\n    return new LunarDate(0, 0, 0, false, 0);\r\n  }\r\n  \r\n  let ly = getYearInfo(year);\r\n  const jd = jdn(day, month, year);\r\n  \r\n  if (jd < ly[0].jd) {\r\n    ly = getYearInfo(year - 1);\r\n  }\r\n  \r\n  return findLunarDate(jd, ly);\r\n}\r\n\r\n/**\r\n * Convert lunar date to solar date\r\n */\r\nexport function getSolarDate(day: number, month: number, year: number, leap: boolean = false): SolarDateInfo {\r\n  if (year < 1200 || year > 2199) {\r\n    return { day: 0, month: 0, year: 0, jd: 0 };\r\n  }\r\n  \r\n  const ly = getYearInfo(year);\r\n  let lm = ly[month - 1];\r\n  \r\n  if (lm.month !== month) {\r\n    lm = ly[month];\r\n  }\r\n  \r\n  // Handle leap month\r\n  if (leap && month < ly.length) {\r\n    const leapMonth = ly.find(m => m.month === month && m.leap);\r\n    if (leapMonth) {\r\n      lm = leapMonth;\r\n    }\r\n  }\r\n  \r\n  const ld = lm.jd + day - 1;\r\n  const [d, m, y, jd] = jdn2date(ld);\r\n  \r\n  return { day: d, month: m, year: y, jd };\r\n}\r\n\r\n/**\r\n * Get Can Chi (Heavenly Stems and Earthly Branches) for a given year\r\n */\r\nexport function getYearCanChi(year: number): string {\r\n  const canIndex = (year + 6) % 10;\r\n  const chiIndex = (year + 8) % 12;\r\n  return `${CAN[canIndex]} ${CHI[chiIndex]}`;\r\n}\r\n\r\n/**\r\n * Get Can Chi for a given day\r\n */\r\nexport function getDayCanChi(jd: number): string {\r\n  const canIndex = (jd + 9) % 10;\r\n  const chiIndex = (jd + 1) % 12;\r\n  return `${CAN[canIndex]} ${CHI[chiIndex]}`;\r\n}\r\n\r\n/**\r\n * Get Can Chi for a given month\r\n */\r\nexport function getMonthCanChi(month: number, year: number): string {\r\n  const yearCanIndex = (year + 6) % 10;\r\n  const monthCanIndex = (yearCanIndex * 2 + month) % 10;\r\n  const monthChiIndex = (month + 1) % 12;\r\n  return `${CAN[monthCanIndex]} ${CHI[monthChiIndex]}`;\r\n}","// src/lunar-calendar.ts\r\nimport { LunarDate } from './lunar-date';\r\nimport { getLunarDate, getSolarDate, getYearCanChi, getDayCanChi, getMonthCanChi } from './core';\r\nimport { TUAN, TIET_KHI } from './constants';\r\nimport { jdn } from './utils';\r\nimport type { LunarDateInfo, SolarDateInfo } from './types';\r\n\r\nexport class LunarCalendar {\r\n  private _lunarDate: LunarDate;\r\n  private _solarDate: SolarDateInfo;\r\n\r\n  constructor(day: number, month: number, year: number, isLunar: boolean = false) {\r\n    if (isLunar) {\r\n      this._lunarDate = new LunarDate(day, month, year, false, 0);\r\n      this._solarDate = getSolarDate(day, month, year);\r\n    } else {\r\n      this._solarDate = { day, month, year, jd: jdn(day, month, year) };\r\n      this._lunarDate = getLunarDate(day, month, year);\r\n    }\r\n  }\r\n\r\n  static fromSolar(day: number, month: number, year: number): LunarCalendar {\r\n    return new LunarCalendar(day, month, year, false);\r\n  }\r\n\r\n  static fromLunar(day: number, month: number, year: number, leap: boolean = false): LunarCalendar {\r\n    const calendar = new LunarCalendar(day, month, year, true);\r\n    if (leap) {\r\n      calendar._lunarDate.leap = true;\r\n    }\r\n    return calendar;\r\n  }\r\n\r\n  static today(): LunarCalendar {\r\n    const now = new Date();\r\n    return LunarCalendar.fromSolar(now.getDate(), now.getMonth() + 1, now.getFullYear());\r\n  }\r\n\r\n  get lunarDate(): LunarDate {\r\n    return this._lunarDate;\r\n  }\r\n\r\n  get solarDate(): SolarDateInfo {\r\n    return this._solarDate;\r\n  }\r\n\r\n  get yearCanChi(): string {\r\n    return getYearCanChi(this._lunarDate.year);\r\n  }\r\n\r\n  get dayCanChi(): string {\r\n    return getDayCanChi(this._solarDate.jd);\r\n  }\r\n\r\n  get monthCanChi(): string {\r\n    return getMonthCanChi(this._lunarDate.month, this._lunarDate.year);\r\n  }\r\n\r\n  get dayOfWeek(): string {\r\n    const dayIndex = (this._solarDate.jd + 1) % 7;\r\n    return TUAN[dayIndex];\r\n  }\r\n\r\n  formatLunar(): string {\r\n    return this._lunarDate.toString();\r\n  }\r\n\r\n  formatSolar(): string {\r\n    return `${this._solarDate.day}/${this._solarDate.month}/${this._solarDate.year}`;\r\n  }\r\n\r\n  toString(): string {\r\n    return `Solar: ${this.formatSolar()}, Lunar: ${this.formatLunar()}`;\r\n  }\r\n}","// src/index.ts\r\nimport { getDayCanChi, getLunarDate, getMonthCanChi, getSolarDate, getYearCanChi } from './core';\r\nimport { LunarCalendar } from './lunar-calendar';\r\nimport { LunarDate } from './lunar-date';\r\nimport { decodeLunarYear } from './utils';\r\n\r\nexport { LunarDate } from \"./lunar-date\";\r\nexport { LunarCalendar } from \"./lunar-calendar\";\r\nexport {\r\n  getLunarDate,\r\n  getSolarDate,\r\n  getYearCanChi,\r\n  getDayCanChi,\r\n  getMonthCanChi,\r\n} from \"./core\";\r\nexport * from \"./types\";\r\nexport * from \"./constants\";\r\nexport { decodeLunarYear, getYearInfo } from \"./utils\";\r\n\r\n// Default export for convenience\r\nexport default {\r\n  LunarDate,\r\n  LunarCalendar,\r\n  getLunarDate,\r\n  getSolarDate,\r\n  getYearCanChi,\r\n  getDayCanChi,\r\n  getMonthCanChi,\r\n  decodeLunarYear,\r\n};\r\n"],"names":["ABOUT","TK13","TK14","TK15","TK16","TK17","TK18","TK19","TK20","TK21","TK22","CAN","CHI","TUAN","GIO_HD","TIET_KHI","FIRST_DAY","LAST_DAY","LunarDate","day","month","year","leap","jd","leapStr","other","INT","d","jdn","a","y","m","jdn2date","A","Z","alpha","B","C","D","E","decodeLunarYear","k","monthLengths","regularMonths","offsetOfTet","leapMonth","leapMonthLength","currentJD","j","i","ly","mm","getYearInfo","yearCode","findLunarDate","off","getLunarDate","getSolarDate","lm","ld","getYearCanChi","canIndex","chiIndex","getDayCanChi","getMonthCanChi","monthCanIndex","monthChiIndex","LunarCalendar","isLunar","calendar","now","dayIndex","index"],"mappings":"wPACO,MAAMA,EAAQ;AAAA,qCAERC,EAAiB,CAC5B,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,SAG/EC,EAAiB,CAC5B,QAAU,QAAU,QAAU,QAAU,QAAU,KAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,SAG/EC,EAAiB,CAC5B,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,SAG/EC,EAAiB,CAC5B,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,SAG/EC,EAAiB,CAC5B,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,KAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,QAAU,OAC1F,QAAU,QAAU,QA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"}